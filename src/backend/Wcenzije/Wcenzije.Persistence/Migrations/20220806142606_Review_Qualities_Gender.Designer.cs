// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wcenzije.Persistence;

#nullable disable

namespace Wcenzije.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220806142606_Review_Qualities_Gender")]
    partial class Review_Qualities_Gender
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wcenzije.API.Entities.Qualities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("HasPaperTowels")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasSoap")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasToiletPaper")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClean")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Qualities");
                });

            modelBuilder.Entity("Wcenzije.API.Entities.Review", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<List<string>>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("QualitiesId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QualitiesId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Wcenzije.API.Entities.Review", b =>
                {
                    b.HasOne("Wcenzije.API.Entities.Qualities", "Qualities")
                        .WithMany()
                        .HasForeignKey("QualitiesId");

                    b.Navigation("Qualities");
                });
#pragma warning restore 612, 618
        }
    }
}
